{"ast":null,"code":"import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { receivedMessage } from \"../../room/actions\";\nimport { useFilterReceivedMessage } from \"./use-filter-received-message\";\nimport { useNavigation } from '@react-navigation/native';\nimport { actions } from \"../../rooms/slices/rooms\";\nimport { useUserId } from \"../../room/messages/message/hooks/use-user-id\";\nimport { addNewMessage } from \"../../direct-messages/actions\";\nimport { actions as createActions } from \"../../rooms/slices/create\";\nimport { useCreateMessage } from \"../../core/snackbar/hooks/use-create-message\";\nvar createPayload = function createPayload(data) {\n  return {\n    text: data.payload.text,\n    senderId: data.payload.senderId,\n    roomId: data.payload.roomId,\n    username: data.payload.username\n  };\n};\nvar createDMPayload = function createDMPayload(data) {\n  return {\n    id: data.payload.id,\n    dmId: data.payload.dmId,\n    senderId: data.payload.senderId,\n    message: data.payload.message,\n    username: data.payload.username\n  };\n};\nvar createNotificationPayload = function createNotificationPayload(id, to, username, message) {\n  return {\n    title: \"New message from \" + username,\n    description: message,\n    type: 'info',\n    action: {\n      to: to,\n      parameter: id\n    }\n  };\n};\nvar isError = function isError(event, userId) {\n  return event.payload.id === 0 && event.payload.userId === userId;\n};\nvar onMessageHandler = function onMessageHandler(navigation, dispatch, userId, event, filterReceivedMessage, dispatchNotification) {\n  var _event$payload;\n  if (event.type === 'room_deleted' && ((_event$payload = event.payload) == null ? void 0 : _event$payload.deleted) === true) {\n    dispatch(actions.attempt(userId));\n    navigation.navigate(\"Rooms\");\n  }\n  if (event.type === 'new_message') {\n    var _event$payload2, _event$payload3;\n    var shouldSave = filterReceivedMessage((_event$payload2 = event.payload) == null ? void 0 : _event$payload2.usersId);\n    if (shouldSave || ((_event$payload3 = event.payload) == null ? void 0 : _event$payload3.isOpen) === true) {\n      var payload = createNotificationPayload(event.payload.roomId, 'Room', event.payload.username, event.payload.text);\n      dispatch(receivedMessage(createPayload(event)));\n      dispatchNotification(payload);\n    }\n  }\n  if (event.type === 'new_dm_message') {\n    var _event$payload4;\n    var _shouldSave = filterReceivedMessage((_event$payload4 = event.payload) == null ? void 0 : _event$payload4.usersId);\n    if (_shouldSave) {\n      var _payload = createNotificationPayload(event.payload.dmId, 'DM', event.payload.username, event.payload.message);\n      dispatch(addNewMessage(createDMPayload(event)));\n      dispatchNotification(_payload);\n    }\n  }\n  if (event.type === 'add_new_room') {\n    if (isError(event, userId)) {\n      dispatch(createActions.failure(\"fails\"));\n    } else {\n      dispatch(actions.attempt(userId));\n    }\n  }\n};\nexport var useInitiateRoomsHandlers = function useInitiateRoomsHandlers() {\n  var dispatch = useDispatch();\n  var userId = useUserId();\n  var filterReceivedMessage = useFilterReceivedMessage();\n  var navigation = useNavigation();\n  var dispatchNotification = useCreateMessage();\n  useEffect(function () {\n    globalThis.socket.onmessage = function (event) {\n      return onMessageHandler(navigation, dispatch, userId, JSON.parse(event.data), filterReceivedMessage, dispatchNotification);\n    };\n  }, []);\n};","map":{"version":3,"names":["useEffect","useDispatch","receivedMessage","useFilterReceivedMessage","useNavigation","actions","useUserId","addNewMessage","createActions","useCreateMessage","createPayload","data","text","payload","senderId","roomId","username","createDMPayload","id","dmId","message","createNotificationPayload","to","title","description","type","action","parameter","isError","event","userId","onMessageHandler","navigation","dispatch","filterReceivedMessage","dispatchNotification","_event$payload","deleted","attempt","navigate","_event$payload2","_event$payload3","shouldSave","usersId","isOpen","_event$payload4","failure","useInitiateRoomsHandlers","globalThis","socket","onmessage","JSON","parse"],"sources":["/home/nerds-pc/Projects/chat-app/Lyssa/src/ws/hooks/use-initiate-rooms-handlers.ts"],"sourcesContent":["import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { receivedMessage } from \"../../room/actions\"\nimport { useFilterReceivedMessage } from './use-filter-received-message'\nimport { useNavigation } from '@react-navigation/native'\nimport { actions } from '../../rooms/slices/rooms'\nimport { useUserId } from '../../room/messages/message/hooks/use-user-id'\nimport { addNewMessage } from '../../direct-messages/actions'\nimport { DmMessage } from '../../direct-messages/slices/messages'\nimport { actions as createActions } from '../../rooms/slices/create'\nimport { useCreateMessage } from '../../core/snackbar/hooks/use-create-message'\n\ntype Props = {\n  payload: DmMessage\n}\n\nconst createPayload = (data: any) => ({\n  text: data.payload.text,\n  senderId: data.payload.senderId,\n  roomId: data.payload.roomId,\n  username: data.payload.username\n})\n\nconst createDMPayload = (data: Props) => ({\n  id: data.payload.id,\n  dmId: data.payload.dmId,\n  senderId: data.payload.senderId,\n  message: data.payload.message,\n  username: data.payload.username,\n})\n\nconst createNotificationPayload = (id: number, to: string, username: string, message: string) => ({\n  title: `New message from ${username}`,\n  description: message,\n  type: 'info',\n  action: {\n    to,\n    parameter: id,\n  }\n})\n\nconst isError = (event, userId) => event.payload.id === 0 && event.payload.userId === userId\n\nconst onMessageHandler = (navigation, dispatch, userId, event, filterReceivedMessage, dispatchNotification) => {\n  if (event.type === 'room_deleted' && event.payload?.deleted === true) {\n    dispatch(actions.attempt(userId))\n    navigation.navigate(\"Rooms\")\n  }\n\n  if (event.type === 'new_message') {\n    const shouldSave = filterReceivedMessage(event.payload?.usersId)\n    if (shouldSave || event.payload?.isOpen === true) {\n      const payload = createNotificationPayload(event.payload.roomId, 'Room', event.payload.username, event.payload.text)\n\n      dispatch(receivedMessage(createPayload(event)))\n\n      dispatchNotification(payload)\n    }\n  }\n\n  if (event.type === 'new_dm_message') {\n    const shouldSave = filterReceivedMessage(event.payload?.usersId)\n    if(shouldSave) {\n      const payload = createNotificationPayload(event.payload.dmId, 'DM', event.payload.username, event.payload.message)\n      dispatch(addNewMessage(createDMPayload(event)))\n\n      dispatchNotification(payload)\n    }\n\n  }\n\n  if (event.type === 'add_new_room') {\n    if (isError(event, userId)) {\n      dispatch(createActions.failure(\"fails\"))\n    } else {\n      dispatch(actions.attempt(userId))\n    }\n  }\n}\n\nexport const useInitiateRoomsHandlers = () => {\n  const dispatch = useDispatch()\n  const userId = useUserId()\n  const filterReceivedMessage = useFilterReceivedMessage()\n  const navigation = useNavigation()\n  const dispatchNotification = useCreateMessage()\n\n  useEffect(() => {\n    globalThis.socket.onmessage = event => onMessageHandler(navigation, dispatch, userId, JSON.parse(event.data), filterReceivedMessage, dispatchNotification)\n  }, [])\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}