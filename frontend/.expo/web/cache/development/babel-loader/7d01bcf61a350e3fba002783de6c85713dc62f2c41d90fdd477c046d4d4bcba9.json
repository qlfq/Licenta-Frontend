{"ast":null,"code":"import { ofType } from 'redux-observable';\nimport { of, mergeMap, catchError } from 'rxjs';\nimport { deleteRoom } from \"../actions\";\nimport { repository } from \"../repository\";\nimport { actions } from \"../slices/delete\";\nvar success = function success() {\n  return of(actions.success(true));\n};\nvar failure = function failure() {\n  return of(actions.failure());\n};\nvar perform = function perform(_ref) {\n  var payload = _ref.payload;\n  return repository.deleteRoom(payload).pipe(mergeMap(success)).pipe(catchError(failure));\n};\nexport default (function (action$) {\n  return action$.pipe(ofType(deleteRoom.type)).pipe(mergeMap(perform));\n});","map":{"version":3,"names":["ofType","of","mergeMap","catchError","deleteRoom","repository","actions","success","failure","perform","_ref","payload","pipe","action$","type"],"sources":["/home/nerds-pc/Projects/chat-app/frontend/src/room/epics/delete.ts"],"sourcesContent":["import { ofType } from 'redux-observable'\nimport { of, mergeMap, catchError } from 'rxjs'\nimport { deleteRoom } from '../actions'\nimport { repository } from '../repository'\nimport { actions } from '../slices/delete'\n\nconst success = () => of(actions.success(true))\n\nconst failure = () => of(actions.failure())\n\nconst perform = ({ payload }) => repository.deleteRoom(payload)\n  .pipe(mergeMap(success))\n  .pipe(catchError(failure))\n\nexport default (action$) => action$\n.pipe(ofType(deleteRoom.type))\n.pipe(mergeMap(perform))"],"mappings":"AAAA,SAASA,MAAM,QAAQ,kBAAkB;AACzC,SAASC,EAAE,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,MAAM;AAC/C,SAASC,UAAU;AACnB,SAASC,UAAU;AACnB,SAASC,OAAO;AAEhB,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA;EAAA,OAASN,EAAE,CAACK,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC,CAAC;AAAA;AAE/C,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA;EAAA,OAASP,EAAE,CAACK,OAAO,CAACE,OAAO,EAAE,CAAC;AAAA;AAE3C,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAAC,IAAA;EAAA,IAAMC,OAAO,GAAAD,IAAA,CAAPC,OAAO;EAAA,OAAON,UAAU,CAACD,UAAU,CAACO,OAAO,CAAC,CAC5DC,IAAI,CAACV,QAAQ,CAACK,OAAO,CAAC,CAAC,CACvBK,IAAI,CAACT,UAAU,CAACK,OAAO,CAAC,CAAC;AAAA;AAE5B,gBAAe,UAACK,OAAO;EAAA,OAAKA,OAAO,CAClCD,IAAI,CAACZ,MAAM,CAACI,UAAU,CAACU,IAAI,CAAC,CAAC,CAC7BF,IAAI,CAACV,QAAQ,CAACO,OAAO,CAAC,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}