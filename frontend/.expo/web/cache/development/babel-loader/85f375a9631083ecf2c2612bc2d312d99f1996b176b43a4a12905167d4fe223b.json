{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useCallback } from 'react';\nimport { useGetUserId } from \"./use-get-user-id\";\nvar createPayload = function createPayload(values, userId) {\n  return JSON.stringify({\n    type: 'send_room',\n    payload: _objectSpread(_objectSpread({}, values), {}, {\n      userId: userId\n    })\n  });\n};\nexport var useCreateRoom = function useCreateRoom() {\n  var userId = useGetUserId();\n  return useCallback(function (values) {\n    globalThis.socket.send(createPayload(values, parseInt(userId)));\n  }, [userId]);\n};","map":{"version":3,"names":["useCallback","useGetUserId","createPayload","values","userId","JSON","stringify","type","payload","_objectSpread","useCreateRoom","globalThis","socket","send","parseInt"],"sources":["/home/nerds-pc/Projects/chat-app/Lyssa/src/rooms/hooks/use-create-room.ts"],"sourcesContent":["import { useCallback } from 'react'\nimport { useGetUserId } from './use-get-user-id'\n\nconst createPayload = (values: any, userId: number) => JSON.stringify({\n  type: 'send_room',\n  payload: {\n    ...values,\n    userId,\n  }\n})\n\nexport const useCreateRoom = () => {\n  const userId = useGetUserId()\n\n  return useCallback((values: any) => {\n    globalThis.socket.send(createPayload(values, parseInt(userId)))\n  }, [userId])\n}\n"],"mappings":";;;AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,YAAY;AAErB,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,MAAW,EAAEC,MAAc;EAAA,OAAKC,IAAI,CAACC,SAAS,CAAC;IACpEC,IAAI,EAAE,WAAW;IACjBC,OAAO,EAAAC,aAAA,CAAAA,aAAA,KACFN,MAAM;MACTC,MAAM,EAANA;IAAM;EAEV,CAAC,CAAC;AAAA;AAEF,OAAO,IAAMM,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;EACjC,IAAMN,MAAM,GAAGH,YAAY,EAAE;EAE7B,OAAOD,WAAW,CAAC,UAACG,MAAW,EAAK;IAClCQ,UAAU,CAACC,MAAM,CAACC,IAAI,CAACX,aAAa,CAACC,MAAM,EAAEW,QAAQ,CAACV,MAAM,CAAC,CAAC,CAAC;EACjE,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;AACd,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}