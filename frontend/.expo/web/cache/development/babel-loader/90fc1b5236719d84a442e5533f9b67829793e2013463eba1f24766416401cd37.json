{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { createSlice } from '@reduxjs/toolkit';\nvar initialState = {\n  attempt: null,\n  error: null\n};\nvar attempt = function attempt(state, _ref) {\n  var payload = _ref.payload;\n  return _objectSpread(_objectSpread({}, state), {}, {\n    attempt: payload\n  });\n};\nvar failure = function failure(state, _ref2) {\n  var payload = _ref2.payload;\n  return _objectSpread(_objectSpread({}, state), {}, {\n    error: payload\n  });\n};\nvar reset = function reset() {\n  return initialState;\n};\nvar loginSlice = createSlice({\n  name: 'LoginSlice',\n  initialState: initialState,\n  reducers: {\n    attempt: attempt,\n    failure: failure,\n    reset: reset\n  }\n});\nvar actions = loginSlice.actions;\nexport { actions };\nexport default loginSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","attempt","error","state","_ref","payload","_objectSpread","failure","_ref2","reset","loginSlice","name","reducers","actions","reducer"],"sources":["/home/nerds-pc/Projects/chat-app/frontend/src/login/slices/login.ts"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  attempt: null,\n  error: null,\n}\n\nconst attempt = (state, { payload }) => ({ ...state, attempt: payload })\n\nconst failure = (state, { payload }) => ({ ...state, error: payload })\n\nconst reset = () => initialState\n\nconst loginSlice = createSlice<any>({\n  name: 'LoginSlice',\n  initialState,\n  reducers: {\n    attempt,\n    failure,\n    reset\n  }\n})\n\nexport const { actions } = loginSlice\n\nexport default loginSlice.reducer\n"],"mappings":";;;AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,IAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,IAAI;EACbC,KAAK,EAAE;AACT,CAAC;AAED,IAAMD,OAAO,GAAG,SAAVA,OAAOA,CAAIE,KAAK,EAAAC,IAAA;EAAA,IAAIC,OAAO,GAAAD,IAAA,CAAPC,OAAO;EAAA,OAAAC,aAAA,CAAAA,aAAA,KAAaH,KAAK;IAAEF,OAAO,EAAEI;EAAO;AAAA,CAAG;AAExE,IAAME,OAAO,GAAG,SAAVA,OAAOA,CAAIJ,KAAK,EAAAK,KAAA;EAAA,IAAIH,OAAO,GAAAG,KAAA,CAAPH,OAAO;EAAA,OAAAC,aAAA,CAAAA,aAAA,KAAaH,KAAK;IAAED,KAAK,EAAEG;EAAO;AAAA,CAAG;AAEtE,IAAMI,KAAK,GAAG,SAARA,KAAKA,CAAA;EAAA,OAAST,YAAY;AAAA;AAEhC,IAAMU,UAAU,GAAGX,WAAW,CAAM;EAClCY,IAAI,EAAE,YAAY;EAClBX,YAAY,EAAZA,YAAY;EACZY,QAAQ,EAAE;IACRX,OAAO,EAAPA,OAAO;IACPM,OAAO,EAAPA,OAAO;IACPE,KAAK,EAALA;EACF;AACF,CAAC,CAAC;AAEK,IAAQI,OAAO,GAAKH,UAAU,CAAtBG,OAAO;AAAe,SAAAA,OAAA;AAErC,eAAeH,UAAU,CAACI,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}