{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { brightColor, darkColor } from \"../../../constants/colors\";\nimport { Avatar } from \"./avatar\";\nimport { useOnPress } from \"./hooks/use-on-press\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Item = function Item(_ref) {\n  var item = _ref.item;\n  return _jsx(TouchableOpacity, {\n    onPress: useOnPress(item.id),\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Avatar, {}), _jsx(View, {\n        style: {\n          flexDirection: 'row',\n          flexGrow: 1\n        },\n        children: _jsx(Text, {\n          style: styles.text,\n          children: item.name\n        })\n      }), _jsx(FontAwesome5, {\n        name: 'paper-plane',\n        style: styles.icon\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    width: '90%',\n    height: 80,\n    position: 'relative',\n    flexDirection: 'row',\n    alignSelf: 'center',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    gap: 15,\n    backgroundColor: brightColor,\n    borderRadius: 20,\n    borderWidth: 1,\n    borderStyle: 'solid',\n    borderColor: darkColor,\n    marginBottom: 20,\n    shadowColor: '#000000',\n    shadowOffset: {\n      width: 0,\n      height: 7\n    },\n    shadowOpacity: 0.21,\n    shadowRadius: 7.68,\n    elevation: 10\n  },\n  text: {\n    fontFamily: 'sono',\n    fontSize: 16\n  },\n  icon: {\n    fontSize: 20,\n    marginRight: 25\n  }\n});","map":{"version":3,"names":["React","StyleSheet","Text","TouchableOpacity","View","brightColor","darkColor","Avatar","useOnPress","FontAwesome5","jsx","_jsx","jsxs","_jsxs","Item","_ref","item","onPress","id","children","style","styles","container","flexDirection","flexGrow","text","name","icon","create","width","height","position","alignSelf","justifyContent","alignItems","gap","backgroundColor","borderRadius","borderWidth","borderStyle","borderColor","marginBottom","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","fontFamily","fontSize","marginRight"],"sources":["/home/nerds-pc/Projects/chat-app/frontend/src/rooms/list/item/index.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { IRoom } from '../../interfaces/room'\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native'\nimport { brightColor, darkColor } from '../../../constants/colors'\nimport { Avatar } from './avatar'\nimport { useOnPress } from './hooks/use-on-press'\nimport { FontAwesome5 } from '@expo/vector-icons'\n\ninterface Item {\n  item: IRoom\n}\n\nexport const Item = ({item}: Item) => <TouchableOpacity onPress={useOnPress(item.id)}>\n  <View style={styles.container}>\n    <Avatar/>\n    <View style={{flexDirection: 'row', flexGrow: 1 }}>\n      <Text style={styles.text}>\n        {item.name}\n      </Text>\n    </View>\n    <FontAwesome5 name={'paper-plane'} style={styles.icon} />\n  </View>\n</TouchableOpacity>\nconst styles = StyleSheet.create<any>({\n  container: {\n    width: '90%',\n    height: 80,\n    position: 'relative',\n    flexDirection: 'row',\n    alignSelf: 'center',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    gap: 15,\n    backgroundColor: brightColor,\n    borderRadius: 20,\n    borderWidth: 1,\n    borderStyle: 'solid',\n    borderColor: darkColor,\n    marginBottom: 20,\n    shadowColor: '#000000',\n    shadowOffset: {\n      width: 0,\n      height: 7,\n    },\n    shadowOpacity: 0.21,\n    shadowRadius: 7.68,\n    elevation: 10\n  },\n  text: {\n    fontFamily: 'sono',\n    fontSize: 16,\n  },\n  icon: {\n    fontSize: 20,\n    marginRight: 25,\n  }\n})\n"],"mappings":"AAAA,OAAOA,KAAK,MAAoB,OAAO;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAGvC,SAASC,WAAW,EAAEC,SAAS;AAC/B,SAASC,MAAM;AACf,SAASC,UAAU;AACnB,SAASC,YAAY,QAAQ,oBAAoB;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAMjD,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAAC,IAAA;EAAA,IAAKC,IAAI,GAAAD,IAAA,CAAJC,IAAI;EAAA,OAAYL,IAAA,CAACR,gBAAgB;IAACc,OAAO,EAAET,UAAU,CAACQ,IAAI,CAACE,EAAE,CAAE;IAAAC,QAAA,EACnFN,KAAA,CAACT,IAAI;MAACgB,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAAH,QAAA,GAC5BR,IAAA,CAACJ,MAAM,KAAE,EACTI,IAAA,CAACP,IAAI;QAACgB,KAAK,EAAE;UAACG,aAAa,EAAE,KAAK;UAAEC,QAAQ,EAAE;QAAE,CAAE;QAAAL,QAAA,EAChDR,IAAA,CAACT,IAAI;UAACkB,KAAK,EAAEC,MAAM,CAACI,IAAK;UAAAN,QAAA,EACtBH,IAAI,CAACU;QAAI;MACL,EACF,EACPf,IAAA,CAACF,YAAY;QAACiB,IAAI,EAAE,aAAc;QAACN,KAAK,EAAEC,MAAM,CAACM;MAAK,EAAG;IAAA;EACpD,EACU;AAAA;AACnB,IAAMN,MAAM,GAAGpB,UAAU,CAAC2B,MAAM,CAAM;EACpCN,SAAS,EAAE;IACTO,KAAK,EAAE,KAAK;IACZC,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,UAAU;IACpBR,aAAa,EAAE,KAAK;IACpBS,SAAS,EAAE,QAAQ;IACnBC,cAAc,EAAE,YAAY;IAC5BC,UAAU,EAAE,QAAQ;IACpBC,GAAG,EAAE,EAAE;IACPC,eAAe,EAAE/B,WAAW;IAC5BgC,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,OAAO;IACpBC,WAAW,EAAElC,SAAS;IACtBmC,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE,SAAS;IACtBC,YAAY,EAAE;MACZd,KAAK,EAAE,CAAC;MACRC,MAAM,EAAE;IACV,CAAC;IACDc,aAAa,EAAE,IAAI;IACnBC,YAAY,EAAE,IAAI;IAClBC,SAAS,EAAE;EACb,CAAC;EACDrB,IAAI,EAAE;IACJsB,UAAU,EAAE,MAAM;IAClBC,QAAQ,EAAE;EACZ,CAAC;EACDrB,IAAI,EAAE;IACJqB,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAE;EACf;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}