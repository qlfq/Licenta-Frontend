{"ast":null,"code":"import React from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Title } from \"./title\";\nimport { Field } from \"./field\";\nimport { Create } from \"./create\";\nimport { Dropdown } from \"./dropdown\";\nimport { RadioButton } from \"./radio-button\";\nimport { ErrorMessage } from \"./error-message\";\nimport { useBehaviour } from \"./hooks/use-behaviour\";\nimport { useValues } from \"./hooks/use-values\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var RoomModal = function RoomModal() {\n  useBehaviour();\n  var _useValues = useValues(),\n    modalRoom = _useValues.modalRoom,\n    closeModal = _useValues.closeModal,\n    users = _useValues.users;\n  return _jsxs(Modal, {\n    visible: modalRoom,\n    animationType: 'none',\n    transparent: true,\n    children: [_jsx(TouchableOpacity, {\n      onPress: closeModal,\n      style: styles.backgroundButton\n    }), _jsxs(View, {\n      style: styles.content,\n      children: [_jsx(Title, {}), _jsxs(View, {\n        children: [_jsx(Field, {}), _jsx(RadioButton, {}), users && _jsx(Dropdown, {\n          users: users\n        })]\n      }), _jsx(ErrorMessage, {}), _jsx(Create, {})]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  backgroundButton: {\n    width: '100%',\n    height: '100vh',\n    position: 'absolute',\n    backgroundColor: 'rgba(0, 0, 0, 0.25)',\n    top: 0,\n    left: 0\n  },\n  content: {\n    width: '80%',\n    height: '60%',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    position: 'relative',\n    margin: 'auto',\n    zIndex: 1,\n    borderRadius: 15\n  }\n});","map":{"version":3,"names":["React","Modal","StyleSheet","TouchableOpacity","View","Title","Field","Create","Dropdown","RadioButton","ErrorMessage","useBehaviour","useValues","jsx","_jsx","jsxs","_jsxs","RoomModal","_useValues","modalRoom","closeModal","users","visible","animationType","transparent","children","onPress","style","styles","backgroundButton","content","create","width","height","position","backgroundColor","top","left","justifyContent","alignItems","margin","zIndex","borderRadius"],"sources":["/home/nerds-pc/Projects/chat-app/Lyssa/src/rooms/room-modal/index.tsx"],"sourcesContent":["import React from 'react'\nimport { Modal, StyleSheet, TouchableOpacity, View, Text } from 'react-native'\nimport { useContext } from '../context'\nimport { Title } from './title'\nimport { Field } from './field'\nimport { Create } from './create'\nimport { Dropdown } from './dropdown'\nimport { useCloseModal } from './hooks/use-close-modal'\nimport { RadioButton } from './radio-button'\nimport { ErrorMessage } from './error-message'\nimport { useBehaviour } from './hooks/use-behaviour'\nimport { useValues } from './hooks/use-values'\n\nexport const RoomModal = () => {\n  useBehaviour()\n  const { modalRoom, closeModal, users } = useValues()\n\n  return <Modal\n    visible={modalRoom}\n    animationType={'none'}\n    transparent\n  >\n    <TouchableOpacity onPress={closeModal} style={styles.backgroundButton} />\n    <View style={styles.content}>\n      <Title />\n      <View>\n        <Field />\n        <RadioButton />\n        {\n          users && <Dropdown users={users} />\n        }\n      </View>\n      <ErrorMessage />\n      <Create />\n    </View>\n  </Modal>\n}\n\n\nconst styles = StyleSheet.create<any>({\n  backgroundButton: {\n    width: '100%',\n    height: '100vh',\n    position: 'absolute',\n    backgroundColor: 'rgba(0, 0, 0, 0.25)',\n    top: 0,\n    left: 0,\n  },\n  content: {\n    width: '80%',\n    height: '60%',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    position: 'relative',\n    margin: 'auto',\n    zIndex: 1,\n    borderRadius: 15,\n  }\n})\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAGzB,SAASC,KAAK;AACd,SAASC,KAAK;AACd,SAASC,MAAM;AACf,SAASC,QAAQ;AAEjB,SAASC,WAAW;AACpB,SAASC,YAAY;AACrB,SAASC,YAAY;AACrB,SAASC,SAAS;AAA4B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE9C,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;EAC7BN,YAAY,EAAE;EACd,IAAAO,UAAA,GAAyCN,SAAS,EAAE;IAA5CO,SAAS,GAAAD,UAAA,CAATC,SAAS;IAAEC,UAAU,GAAAF,UAAA,CAAVE,UAAU;IAAEC,KAAK,GAAAH,UAAA,CAALG,KAAK;EAEpC,OAAOL,KAAA,CAACf,KAAK;IACXqB,OAAO,EAAEH,SAAU;IACnBI,aAAa,EAAE,MAAO;IACtBC,WAAW;IAAAC,QAAA,GAEXX,IAAA,CAACX,gBAAgB;MAACuB,OAAO,EAAEN,UAAW;MAACO,KAAK,EAAEC,MAAM,CAACC;IAAiB,EAAG,EACzEb,KAAA,CAACZ,IAAI;MAACuB,KAAK,EAAEC,MAAM,CAACE,OAAQ;MAAAL,QAAA,GAC1BX,IAAA,CAACT,KAAK,KAAG,EACTW,KAAA,CAACZ,IAAI;QAAAqB,QAAA,GACHX,IAAA,CAACR,KAAK,KAAG,EACTQ,IAAA,CAACL,WAAW,KAAG,EAEbY,KAAK,IAAIP,IAAA,CAACN,QAAQ;UAACa,KAAK,EAAEA;QAAM,EAAG;MAAA,EAEhC,EACPP,IAAA,CAACJ,YAAY,KAAG,EAChBI,IAAA,CAACP,MAAM,KAAG;IAAA,EACL;EAAA,EACD;AACV,CAAC;AAGD,IAAMqB,MAAM,GAAG1B,UAAU,CAAC6B,MAAM,CAAM;EACpCF,gBAAgB,EAAE;IAChBG,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,OAAO;IACfC,QAAQ,EAAE,UAAU;IACpBC,eAAe,EAAE,qBAAqB;IACtCC,GAAG,EAAE,CAAC;IACNC,IAAI,EAAE;EACR,CAAC;EACDP,OAAO,EAAE;IACPE,KAAK,EAAE,KAAK;IACZC,MAAM,EAAE,KAAK;IACbK,cAAc,EAAE,cAAc;IAC9BC,UAAU,EAAE,QAAQ;IACpBJ,eAAe,EAAE,OAAO;IACxBD,QAAQ,EAAE,UAAU;IACpBM,MAAM,EAAE,MAAM;IACdC,MAAM,EAAE,CAAC;IACTC,YAAY,EAAE;EAChB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}