{"ast":null,"code":"import { mergeMap, of } from 'rxjs';\nimport { ofType } from \"redux-observable\";\nimport { receivedMessage } from \"../actions\";\nimport { actions } from \"../slices/messages\";\nimport { add } from \"../helpers/handle-messages\";\nvar perform = function perform(state$) {\n  return function (_ref) {\n    var payload = _ref.payload;\n    var room = state$.value.room.data;\n    var updatedRooms = add(room, payload);\n    return of(actions.addMessage(updatedRooms));\n  };\n};\nexport default (function (action$, state$) {\n  return action$.pipe(ofType(receivedMessage.type)).pipe(mergeMap(perform(state$)));\n});","map":{"version":3,"names":["mergeMap","of","ofType","receivedMessage","actions","add","perform","state$","_ref","payload","room","value","data","updatedRooms","addMessage","action$","pipe","type"],"sources":["/home/nerds-pc/Projects/chat-app/frontend/src/room/epics/receive-message.ts"],"sourcesContent":["import { mergeMap, of } from 'rxjs'\nimport {ofType} from \"redux-observable\";\nimport {receivedMessage} from \"../actions\";\nimport {AnyAction} from \"@reduxjs/toolkit\";\nimport {actions, Room} from \"../slices/messages\";\nimport {add} from \"../helpers/handle-messages\";\n\nconst perform = state$ => ({ payload }: AnyAction) => {\n    const room: Room[] = state$.value.room.data\n\n    const updatedRooms = add(room, payload)\n\n    return of(actions.addMessage(updatedRooms))\n}\n\nexport default (action$, state$) => action$\n    .pipe(ofType(receivedMessage.type))\n    .pipe(mergeMap(perform(state$)))"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,EAAE,QAAQ,MAAM;AACnC,SAAQC,MAAM,QAAO,kBAAkB;AACvC,SAAQC,eAAe;AAEvB,SAAQC,OAAO;AACf,SAAQC,GAAG;AAEX,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAGC,MAAM;EAAA,OAAI,UAAAC,IAAA,EAA4B;IAAA,IAAzBC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IAChC,IAAMC,IAAY,GAAGH,MAAM,CAACI,KAAK,CAACD,IAAI,CAACE,IAAI;IAE3C,IAAMC,YAAY,GAAGR,GAAG,CAACK,IAAI,EAAED,OAAO,CAAC;IAEvC,OAAOR,EAAE,CAACG,OAAO,CAACU,UAAU,CAACD,YAAY,CAAC,CAAC;EAC/C,CAAC;AAAA;AAED,gBAAe,UAACE,OAAO,EAAER,MAAM;EAAA,OAAKQ,OAAO,CACtCC,IAAI,CAACd,MAAM,CAACC,eAAe,CAACc,IAAI,CAAC,CAAC,CAClCD,IAAI,CAAChB,QAAQ,CAACM,OAAO,CAACC,MAAM,CAAC,CAAC,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}