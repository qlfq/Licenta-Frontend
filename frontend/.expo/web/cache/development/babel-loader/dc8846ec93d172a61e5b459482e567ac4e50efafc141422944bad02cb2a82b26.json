{"ast":null,"code":"import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { useContext } from \"../context\";\nimport { actions as createActions } from \"../slices/create\";\nimport { actions as getActions } from \"../slices/rooms\";\nimport { useGetUserId } from \"./use-get-user-id\";\nexport var useRedirectAfterCreate = function useRedirectAfterCreate() {\n  var navigation = useNavigation();\n  var roomCreate = useSelector(function (_ref) {\n    var rooms = _ref.rooms;\n    return rooms.create.data;\n  });\n  var _useContext = useContext(),\n    setDirectMessageModal = _useContext.setDirectMessageModal,\n    setModalRoom = _useContext.setModalRoom;\n  var dispatch = useDispatch();\n  var userId = useGetUserId();\n  useEffect(function () {\n    if (roomCreate) {\n      dispatch(createActions.reset());\n      dispatch(getActions.attempt(userId));\n      setDirectMessageModal(false);\n      setModalRoom(false);\n    }\n  }, [roomCreate]);\n};","map":{"version":3,"names":["useDispatch","useSelector","useEffect","useNavigation","useContext","actions","createActions","getActions","useGetUserId","useRedirectAfterCreate","navigation","roomCreate","_ref","rooms","create","data","_useContext","setDirectMessageModal","setModalRoom","dispatch","userId","reset","attempt"],"sources":["/home/nerds-pc/Projects/chat-app/Lyssa/src/rooms/hooks/use-redirect-after-create.ts"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux'\nimport { useEffect } from 'react'\nimport { useNavigation } from '@react-navigation/native'\nimport { useContext } from '../context'\nimport { actions as createActions } from '../slices/create'\nimport { actions as getActions } from '../slices/rooms'\nimport { useGetUserId } from './use-get-user-id'\n\nexport const useRedirectAfterCreate = () => {\n  const navigation = useNavigation()\n  const roomCreate = useSelector(({ rooms }) => rooms.create.data )\n  const { setDirectMessageModal, setModalRoom } = useContext()\n  const dispatch = useDispatch()\n  const userId = useGetUserId()\n\n  useEffect(() => {\n    if(roomCreate) {\n      dispatch(createActions.reset())\n      dispatch(getActions.attempt(userId))\n      setDirectMessageModal(false)\n      setModalRoom(false)\n      // navigation.navigate(\"Room\", { id: roomCreate.id })\n    }\n  }, [roomCreate])\n}"],"mappings":"AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,UAAU;AACnB,SAASC,OAAO,IAAIC,aAAa;AACjC,SAASD,OAAO,IAAIE,UAAU;AAC9B,SAASC,YAAY;AAErB,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAA,EAAS;EAC1C,IAAMC,UAAU,GAAGP,aAAa,EAAE;EAClC,IAAMQ,UAAU,GAAGV,WAAW,CAAC,UAAAW,IAAA;IAAA,IAAGC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAA,OAAOA,KAAK,CAACC,MAAM,CAACC,IAAI;EAAA,EAAE;EACjE,IAAAC,WAAA,GAAgDZ,UAAU,EAAE;IAApDa,qBAAqB,GAAAD,WAAA,CAArBC,qBAAqB;IAAEC,YAAY,GAAAF,WAAA,CAAZE,YAAY;EAC3C,IAAMC,QAAQ,GAAGnB,WAAW,EAAE;EAC9B,IAAMoB,MAAM,GAAGZ,YAAY,EAAE;EAE7BN,SAAS,CAAC,YAAM;IACd,IAAGS,UAAU,EAAE;MACbQ,QAAQ,CAACb,aAAa,CAACe,KAAK,EAAE,CAAC;MAC/BF,QAAQ,CAACZ,UAAU,CAACe,OAAO,CAACF,MAAM,CAAC,CAAC;MACpCH,qBAAqB,CAAC,KAAK,CAAC;MAC5BC,YAAY,CAAC,KAAK,CAAC;IAErB;EACF,CAAC,EAAE,CAACP,UAAU,CAAC,CAAC;AAClB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}