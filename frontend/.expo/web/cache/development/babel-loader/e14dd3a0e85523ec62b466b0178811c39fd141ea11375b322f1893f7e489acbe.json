{"ast":null,"code":"import React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useValues } from \"./hooks/use-values\";\nimport { useFetchUsers } from \"../hooks/use-fetch-users\";\nimport { Users } from \"./users\";\nimport { Create } from \"./create\";\nimport { useNavigateToDm } from \"./hooks/use-navigate-to-dm\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var DirectMessageModal = function DirectMessageModal() {\n  useFetchUsers();\n  useNavigateToDm();\n  var _useValues = useValues(),\n    directMessageModal = _useValues.directMessageModal,\n    closeModal = _useValues.closeModal;\n  return _jsxs(Modal, {\n    visible: directMessageModal,\n    animationType: 'none',\n    transparent: true,\n    children: [_jsx(TouchableOpacity, {\n      onPress: closeModal,\n      style: styles.backgroundButton\n    }), _jsxs(View, {\n      style: styles.content,\n      children: [_jsx(Text, {\n        style: styles.text,\n        children: \"Start messaging\"\n      }), _jsx(Users, {}), _jsx(Create, {})]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  backgroundButton: {\n    width: '100%',\n    height: Dimensions.get('screen').height,\n    position: 'absolute',\n    backgroundColor: 'rgba(0, 0, 0, 0.25)',\n    top: 0,\n    left: 0\n  },\n  content: {\n    width: '80%',\n    height: '60%',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    position: 'relative',\n    margin: 'auto',\n    padding: 50,\n    zIndex: 1,\n    borderRadius: 15,\n    gap: 30\n  },\n  text: {\n    fontSize: 22.4,\n    fontFamily: 'sono',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","Dimensions","Modal","StyleSheet","Text","TouchableOpacity","View","useValues","useFetchUsers","Users","Create","useNavigateToDm","jsx","_jsx","jsxs","_jsxs","DirectMessageModal","_useValues","directMessageModal","closeModal","visible","animationType","transparent","children","onPress","style","styles","backgroundButton","content","text","create","width","height","get","position","backgroundColor","top","left","justifyContent","alignItems","margin","padding","zIndex","borderRadius","gap","fontSize","fontFamily","textAlign","fontWeight"],"sources":["/home/nerds-pc/Projects/chat-app/Lyssa/src/rooms/direct-message-modal/index.tsx"],"sourcesContent":["import React from 'react'\nimport { Dimensions, Modal, StyleSheet, Text, TouchableOpacity, View } from 'react-native'\nimport { useValues } from './hooks/use-values'\nimport { useFetchUsers } from '../hooks/use-fetch-users'\nimport { Users } from './users'\nimport { Create } from './create'\nimport { useNavigateToDm } from './hooks/use-navigate-to-dm'\n\nexport const DirectMessageModal = () => {\n  useFetchUsers()\n  useNavigateToDm()\n  const { directMessageModal, closeModal } = useValues()\n\n  return <Modal\n    visible={directMessageModal}\n    animationType={'none'}\n    transparent\n    >\n    <TouchableOpacity onPress={closeModal} style={styles.backgroundButton} />\n    <View style={styles.content}>\n      <Text style={styles.text}>Start messaging</Text>\n      <Users />\n      <Create />\n    </View>\n  </Modal>\n}\n\nconst styles = StyleSheet.create<any>({\n  backgroundButton: {\n    width: '100%',\n    height: Dimensions.get('screen').height,\n    position: 'absolute',\n    backgroundColor: 'rgba(0, 0, 0, 0.25)',\n    top: 0,\n    left: 0,\n  },\n  content: {\n    width: '80%',\n    height: '60%',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    position: 'relative',\n    margin: 'auto',\n    padding: 50,\n    zIndex: 1,\n    borderRadius: 15,\n    gap: 30,\n  },\n  text: {\n    fontSize: 22.4,\n    fontFamily: 'sono',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  }\n})"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAEzB,SAASC,SAAS;AAClB,SAASC,aAAa;AACtB,SAASC,KAAK;AACd,SAASC,MAAM;AACf,SAASC,eAAe;AAAoC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE5D,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA,EAAS;EACtCR,aAAa,EAAE;EACfG,eAAe,EAAE;EACjB,IAAAM,UAAA,GAA2CV,SAAS,EAAE;IAA9CW,kBAAkB,GAAAD,UAAA,CAAlBC,kBAAkB;IAAEC,UAAU,GAAAF,UAAA,CAAVE,UAAU;EAEtC,OAAOJ,KAAA,CAACb,KAAK;IACXkB,OAAO,EAAEF,kBAAmB;IAC5BG,aAAa,EAAE,MAAO;IACtBC,WAAW;IAAAC,QAAA,GAEXV,IAAA,CAACR,gBAAgB;MAACmB,OAAO,EAAEL,UAAW;MAACM,KAAK,EAAEC,MAAM,CAACC;IAAiB,EAAG,EACzEZ,KAAA,CAACT,IAAI;MAACmB,KAAK,EAAEC,MAAM,CAACE,OAAQ;MAAAL,QAAA,GAC1BV,IAAA,CAACT,IAAI;QAACqB,KAAK,EAAEC,MAAM,CAACG,IAAK;QAAAN,QAAA,EAAC;MAAe,EAAO,EAChDV,IAAA,CAACJ,KAAK,KAAG,EACTI,IAAA,CAACH,MAAM,KAAG;IAAA,EACL;EAAA,EACD;AACV,CAAC;AAED,IAAMgB,MAAM,GAAGvB,UAAU,CAAC2B,MAAM,CAAM;EACpCH,gBAAgB,EAAE;IAChBI,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE/B,UAAU,CAACgC,GAAG,CAAC,QAAQ,CAAC,CAACD,MAAM;IACvCE,QAAQ,EAAE,UAAU;IACpBC,eAAe,EAAE,qBAAqB;IACtCC,GAAG,EAAE,CAAC;IACNC,IAAI,EAAE;EACR,CAAC;EACDT,OAAO,EAAE;IACPG,KAAK,EAAE,KAAK;IACZC,MAAM,EAAE,KAAK;IACbM,cAAc,EAAE,YAAY;IAC5BC,UAAU,EAAE,QAAQ;IACpBJ,eAAe,EAAE,OAAO;IACxBD,QAAQ,EAAE,UAAU;IACpBM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE,CAAC;IACTC,YAAY,EAAE,EAAE;IAChBC,GAAG,EAAE;EACP,CAAC;EACDf,IAAI,EAAE;IACJgB,QAAQ,EAAE,IAAI;IACdC,UAAU,EAAE,MAAM;IAClBC,SAAS,EAAE,QAAQ;IACnBC,UAAU,EAAE;EACd;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}