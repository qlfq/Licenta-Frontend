{"ast":null,"code":"import React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useValues } from \"./hooks/use-values\";\nimport { useFetchUsers } from \"../hooks/use-fetch-users\";\nimport { Users } from \"./users\";\nimport { Create } from \"./create\";\nimport { useNavigateToDm } from \"./hooks/use-navigate-to-dm\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar getHalf = function getHalf(number) {\n  var foo = number * 50 / 100;\n  console.log('Foo: ', foo);\n  return foo;\n};\nexport var DirectMessageModal = function DirectMessageModal() {\n  useFetchUsers();\n  useNavigateToDm();\n  var _useValues = useValues(),\n    directMessageModal = _useValues.directMessageModal,\n    closeModal = _useValues.closeModal;\n  return _jsxs(Modal, {\n    visible: directMessageModal,\n    animationType: 'none',\n    transparent: true,\n    children: [_jsx(TouchableOpacity, {\n      onPress: closeModal,\n      style: styles.backgroundButton\n    }), _jsxs(View, {\n      style: [styles.content, {\n        transform: [{\n          translateX: -(Dimensions.get('screen').width / 2)\n        }, {\n          translateY: -(Dimensions.get('screen').height / 2)\n        }]\n      }],\n      children: [_jsx(Text, {\n        style: styles.text,\n        children: \"Start messaging\"\n      }), _jsx(Users, {}), _jsx(Create, {})]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  backgroundButton: {\n    width: Dimensions.get('screen').width,\n    height: Dimensions.get('screen').height,\n    position: 'absolute',\n    backgroundColor: 'rgba(0, 0, 0, 0.25)',\n    top: 0,\n    left: 0\n  },\n  content: {\n    width: Dimensions.get('screen').width * 80 / 100,\n    height: Dimensions.get('screen').height * 60 / 100,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    position: 'absolute',\n    top: Dimensions.get('screen').height / 2,\n    left: Dimensions.get('screen').width / 2,\n    padding: 50,\n    zIndex: 1,\n    borderRadius: 15,\n    gap: 30\n  },\n  text: {\n    fontSize: 22.4,\n    fontFamily: 'sono',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","Dimensions","Modal","StyleSheet","Text","TouchableOpacity","View","useValues","useFetchUsers","Users","Create","useNavigateToDm","jsx","_jsx","jsxs","_jsxs","getHalf","number","foo","console","log","DirectMessageModal","_useValues","directMessageModal","closeModal","visible","animationType","transparent","children","onPress","style","styles","backgroundButton","content","transform","translateX","get","width","translateY","height","text","create","position","backgroundColor","top","left","justifyContent","alignItems","padding","zIndex","borderRadius","gap","fontSize","fontFamily","textAlign","fontWeight"],"sources":["/home/nerds-pc/Projects/chat-app/Lyssa/src/rooms/direct-message-modal/index.tsx"],"sourcesContent":["import React from 'react'\nimport { Dimensions, Modal, StyleSheet, Text, TouchableOpacity, View } from 'react-native'\nimport { useValues } from './hooks/use-values'\nimport { useFetchUsers } from '../hooks/use-fetch-users'\nimport { Users } from './users'\nimport { Create } from './create'\nimport { useNavigateToDm } from './hooks/use-navigate-to-dm'\n\nconst getHalf = number => {\n  const foo = (number * 50) / 100\n  console.log('Foo: ', foo)\n\n  return foo\n}\n\nexport const DirectMessageModal = () => {\n  useFetchUsers()\n  useNavigateToDm()\n  const {directMessageModal, closeModal} = useValues()\n\n  return <Modal\n    visible={directMessageModal}\n    animationType={'none'}\n    transparent\n  >\n    <TouchableOpacity onPress={closeModal} style={styles.backgroundButton}/>\n    <View style={[\n      styles.content,\n      {\n        transform: [{translateX: -(Dimensions.get('screen').width / 2)}, {translateY: -(Dimensions.get('screen').height / 2)}]\n      }]}>\n      <Text style={styles.text}>Start messaging</Text>\n      <Users/>\n      <Create/>\n    </View>\n  </Modal>\n}\n\nconst styles = StyleSheet.create<any>({\n  backgroundButton: {\n    width: Dimensions.get('screen').width,\n    height: Dimensions.get('screen').height,\n    position: 'absolute',\n    backgroundColor: 'rgba(0, 0, 0, 0.25)',\n    top: 0,\n    left: 0,\n  },\n  content: {\n    width: (Dimensions.get('screen').width * 80) / 100,\n    height: (Dimensions.get('screen').height * 60) / 100,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    position: 'absolute',\n    top: Dimensions.get('screen').height /2,\n    left: Dimensions.get('screen').width / 2,\n    padding: 50,\n    zIndex: 1,\n    borderRadius: 15,\n    gap: 30,\n  },\n  text: {\n    fontSize: 22.4,\n    fontFamily: 'sono',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  }\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}